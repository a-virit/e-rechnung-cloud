# .env.example - Umgebungsvariablen fÃ¼r E-Mail-Services

# ============================================
# E-MAIL SERVICE KONFIGURATION
# ============================================
# WÃ¤hlen Sie EINEN der folgenden Provider:

# SendGrid (Empfohlen - Einfach & ZuverlÃ¤ssig)
SENDGRID_API_KEY=your_sendgrid_api_key_here

# Mailgun (Entwicklerfreundlich)
MAILGUN_API_KEY=your_mailgun_api_key_here
MAILGUN_DOMAIN=your_mailgun_domain_here

# Postmark (Premium Transactional)
POSTMARK_SERVER_TOKEN=your_postmark_server_token_here

# ============================================
# VERCEL DEPLOYMENT KONFIGURATION
# ============================================

# Produktions-URL (wird automatisch gesetzt)
VERCEL_URL=https://ihr-app-name.vercel.app

# ============================================
# SETUP-ANLEITUNG
# ============================================

# 1. SENDGRID SETUP (Empfohlen):
#    - Registrieren: https://sendgrid.com/
#    - API-Key erstellen: Settings > API Keys > Create API Key
#    - Full Access wÃ¤hlen
#    - Domain verifizieren (optional aber empfohlen)
#    - Kosten: 100 E-Mails/Tag kostenlos, dann ab $14.95/Monat

# 2. MAILGUN SETUP:
#    - Registrieren: https://mailgun.com/
#    - Domain hinzufÃ¼gen und DNS-Records konfigurieren
#    - API-Key aus Account > Settings > API Keys
#    - Kosten: 1.000 E-Mails/Monat kostenlos, dann $35/Monat

# 3. POSTMARK SETUP:
#    - Registrieren: https://postmarkapp.com/
#    - Server erstellen und Domain verifizieren
#    - Server Token aus Servers > Your Server > API Tokens
#    - Kosten: 100 E-Mails/Monat kostenlos, dann $10/Monat

# ============================================
# VERCEL DEPLOYMENT SCHRITTE
# ============================================

# 1. Repository zu Vercel verbinden
# 2. Environment Variables in Vercel Dashboard eintragen:
#    Project Settings > Environment Variables
#    
#    Beispiel fÃ¼r SendGrid:
#    SENDGRID_API_KEY = SG.xxxxxxxxxxxxxx
#    VERCEL_URL = https://ihr-projekt.vercel.app

# 3. Deploy ausfÃ¼hren:
#    git add .
#    git commit -m "Add external email provider integration"
#    git push origin main

# ============================================
# SICHERHEITS-CHECKLISTE
# ============================================

# âœ… API-Keys niemals im Frontend-Code
# âœ… Umgebungsvariablen nur server-seitig verwenden
# âœ… HTTPS fÃ¼r alle E-Mail-Provider-Kommunikation
# âœ… Rate-Limiting fÃ¼r E-Mail-Versand implementieren
# âœ… Input-Validation fÃ¼r alle E-Mail-Daten
# âœ… Logging fÃ¼r Audit-Zwecke
# âœ… Fehlerbehandlung mit aussagekrÃ¤ftigen Nachrichten

# ============================================
# PRODUCTION-READY CHECKLIST
# ============================================

# ðŸ”’ Sicherheit:
# - [ ] API-Keys in Vercel Environment Variables
# - [ ] E-Mail-Validation implementiert
# - [ ] Rate-Limiting aktiviert
# - [ ] Error-Logging konfiguriert

# ðŸ“§ E-Mail-Konfiguration:
# - [ ] Provider API-Key getestet
# - [ ] Domain-Verifizierung abgeschlossen (falls erforderlich)
# - [ ] SPF/DKIM Records gesetzt
# - [ ] Test-E-Mail erfolgreich versendet

# ðŸš€ Performance:
# - [ ] E-Mail-Versand asynchron
# - [ ] Retry-Logic bei Fehlern
# - [ ] Queue fÃ¼r groÃŸe Mengen (falls erforderlich)

# ðŸ“Š Monitoring:
# - [ ] E-Mail-Delivery-Status tracking
# - [ ] Fehlerprotokollierung
# - [ ] Performance-Metriken